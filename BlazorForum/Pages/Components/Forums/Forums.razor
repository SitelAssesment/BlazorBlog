@page "/forums"
@inject IManageForums manageForums
@inject IManageForumCategories manageCategories
@inject IManageForumTopics manageTopics
@inject IJSRuntime JSRuntime

@if (_forums == null)
{
    <div class="mb-2 loading-div">
        <em><i class="oi oi-cog se-spin-icon"></i> @GeneralResources.Loading</em>
    </div>
}
else
{
    @if(_forums.Count == 0)
    {
        <div class="alert alert-secondary">
            <span class="text-secondary">@GeneralResources.NoForumsFound</span>
        </div>
    }
    foreach (var forum in _forums)
    {
        <div class="mb-2">
            <header class="forum-header">
                <h3>@forum.Title</h3>
                <span class="forum-description">@forum.Description</span>
            </header>

            <ul class="forum-ul">
                @if(forum.ForumCategories.Count == 0)
                {
                    <li class="text-muted">@GeneralResources.NoCategories</li>
                }
                @foreach (var category in forum.ForumCategories)
                {
                    <li>
                        <a href="@String.Format("/category/{0}/{1}",
                                  category.ForumCategoryId,
                                  UrlFormatting.PrepareUrlText(category.Title))">@category.Title</a> 
                                    ( @(_topicCountList != null ? _topicCountList.Where(p => p.ParentItemId == category.ForumCategoryId)
                                    .FirstOrDefault().ChildCount : 0 ) )
                    </li>
                }
            </ul>
        </div>
    }
}

@code {
    private List<Models.Forum> _forums;
    private List<TopicPostCount> _topicCountList = new List<TopicPostCount>();

    protected override async Task OnInitializedAsync()
    {
        _forums = await manageForums.GetForumsAsync();

        await SetTopicsCount();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("setDocTitle", "Forums");
    }

    protected async Task SetTopicsCount()
    {
        var categories = await manageCategories.GetForumCategoriesAsync();
        
        foreach (var category in categories)
        {
            var topics = await manageTopics.GetApprovedForumTopicsAsync(category.ForumCategoryId);
            var topicCount = new TopicPostCount
            {
                ParentItemId = category.ForumCategoryId,
                ChildCount = topics.Count
            };
            _topicCountList.Add(topicCount);
        }
    }
}
